---
# tasks file for ansible-role-ca

- name: "Ensure openssl is installed"
  apt: name=openssl state=latest

- name: "Delete previous configuration directory"
  file:
    path: "{{ item }}"
    state: absent
    owner: root
    group: root
  with_items:
    - "{{ ca_certs_dir }}"
#  when: clean_ca_certs_dir is defined

- name: "Make configuration directory"
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
  with_items:
  - "{{ ca_certs_dir }}"

- name: "Deploy configuration items"
  template:
    src: "{{ item }}.j2"
    dest: "{{ ca_certs_dir }}/{{ item }}"
    owner: root
    group: root
  with_items:
    - serial
    - ca.conf

- name: "Deploy certificate generation script"
  template:
    src: "{{ item }}.j2"
    dest: "/usr/local/bin/{{ item }}"
    owner: root
    group: root
    mode: "u=rx,g=rx,o="
  with_items:
    - gen-cer

- name: "set CA_SUBJECT var"
  set_fact:
    ca_subject: '/C={{ ca_country }}/ST={{ ca_state }}/L={{ ca_locality }}/O={{ ca_organization }}/OU={{ ca_organizationalunit }}/CN={{ ca_commonname }}/emailAddress={{ ca_email }}'
  when: ca_subject is not defined

- debug: var=ca_subject

- name: "Generate private key && Create root CA files"
  shell:
    "{{ item }}"
  args:
    chdir: "{{ ca_certs_dir }}"
  with_items:
    - "openssl genrsa -des3 -passout pass:{{ ca_rootca_password }} -out {{ shelleg.domain_name | d('example.local')}}.key 2048 -noout"
    - "touch certindex"
    - "openssl req -new -key {{ shelleg.domain_name | d('example.local')}}.key -out {{ shelleg.domain_name | d('example.local')}}.csr -passin pass:{{ ca_rootca_password }} -subj \"{{ ca_subject }}\""
