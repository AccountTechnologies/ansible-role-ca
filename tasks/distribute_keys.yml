---

- name: "Ensure {{ ca_default_ssl_certs_dir }} and {{ ca_default_ssl_key_dir }} dirs exist"
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: ssl-cert
    mode: 0755
  with_items:
    - "{{ ca_default_ssl_certs_dir }}"
    - "{{ ca_default_ssl_key_dir }}"
  become: yes

- name: Ensure certificate trust store is open (RedHat)
  shell: "update-ca-trust force-enable"
  when: ansible_os_family == "RedHat"
  become: yes

- name: "Distribute inventory_hostname-priv-key.pem to inventory_hostname"
  copy:
    src: "{{ ca_distribution_certs_dir }}/{{ inventory_hostname }}-priv-key.pem"
    dest: "{{ ca_default_ssl_key_dir }}/{{ inventory_hostname }}-priv-key.pem"
    owner: root
    group: ssl-cert
    mode: 0750
  become: yes

- name: "Distribute inventory_hostname-cert.pem to inventory_hostname"
  copy:
    src: "{{ ca_distribution_certs_dir }}/{{ inventory_hostname }}-cert.pem"
    dest: "{{ ca_default_ssl_certs_dir }}/{{ inventory_hostname }}-cert.pem"
    owner: root
    group: ssl-cert
    mode: 0755
  become: yes

- name: "Copy {{ ca_cert }} to {{ ca_default_ssl_certs_dir }}"
  copy:
    src: "{{ ca_distribution_certs_dir }}/{{ ca_cert }}"
    dest: "{{ ca_default_ssl_certs_dir }}/{{ ca_cert }}"
    owner: root
    group: ssl-cert
    mode: 0755
  become: yes

# https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-14-04
- name: Generate strong Diffie-Hellman group
  shell: "openssl dhparam -out dhparam.pem 2048"
  args:
    chdir: "/etc/ssl/certs"
    creates: "dhparam.pem"
  become: yes

- name: Ensure certificate trust store is updated (Debian)
  shell: "update-ca-certificates"
  when: ansible_os_family == "Debian"
  become: yes

- name: Ensure certificate trust store is open (RedHat)
  shell: "update-ca-trust extract"
  when: ansible_os_family == "RedHat"
  become: yes

- name: Get file metadata
  shell: "ls -lR {{ item }}"
  with_items:
    - "{{ ca_default_ssl_key_dir }}/{{ inventory_hostname }}-priv-key.pem"
    - "{{ ca_default_ssl_certs_dir }}/{{ inventory_hostname }}-cert.pem"
  register: ls
  when: debug is defined and debug|bool

- debug: var=item.stdout_lines
  with_items:
    - "{{ ls.results }}"
  when: debug is defined and debug|bool

# vim: ft=ansible :
